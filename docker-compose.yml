version: "3.9"
services:
  online_test_database:
    container_name: mysql_database
    image: mysql:8.0.28-oracle
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: $DATABASE_PASSWORD
      MYSQL_DATABASE: $DATABASE_NAME
    volumes:
      - mysql:/var/lib/mysql
    ports:
      - "3456:3306"
  online_test_server:
    container_name: wildfly_server
    build:
      context: ./
      dockerfile: dockerfile
    restart: unless-stopped
    env_file:
      - .env
    environment:
      TZ: $SERVER_CONTAINER_TIME_ZONE
    ports:
      - "8080:8080"
      - "9990:9990"
    links:
      - "online_test_database:online_test_database_link"
    depends_on:
      - online_test_database
#  jenkins_server:
#    container_name: jenkins_server
#    image: jenkins/jenkins:lts-jdk11
#    restart: unless-stopped
#    env_file:
#      - .env
#    environment:
#      TZ: $SERVER_CONTAINER_TIME_ZONE
#    volumes:
#      - jenkins_home:/var/jenkins_home
#    ports:
#      - "8888:8080"
#      - "50000:50000"
#  sonarqube_database:
#    container_name: postgres_database
#    image: postgres:12
#    environment:
#      POSTGRES_USER: sonar
#      POSTGRES_PASSWORD: sonar
#    volumes:
#      - postgresql:/var/lib/postgresql
#  sonarqube_server:
#    container_name: sonarqube_server
#    image: sonarqube:lts-community
#    depends_on:
#      - sonarqube_database
#    environment:
#      SONAR_JDBC_URL: jdbc:postgresql://sonarqube_database:5432/sonar
#      SONAR_JDBC_USERNAME: sonar
#      SONAR_JDBC_PASSWORD: sonar
#    volumes:
#      - sonarqube_data:/opt/sonarqube/data
#      - sonarqube_extensions:/opt/sonarqube/extensions
#      - sonarqube_logs:/opt/sonarqube/logs
#    ports:
#      - "9999:9000"
volumes:
  mysql:
#  jenkins_home:
#  postgresql:
#  sonarqube_data:
#  sonarqube_extensions:
#  sonarqube_logs:
